#!/bin/bash


if [[ $BUILDKITE_REPO =~ git@github.com:([[a-zA-Z0-9/_-]*)(\.git)?$ ]]; then
  REPO_SLUG=${BASH_REMATCH[1]}
fi

if [ -z "$REPO_SLUG" ]; then
  echo "Failed to extract repository slug from BUILDKITE_REPO"
  exit 1
fi

if [ -z "$GITHUB_ACCESS_TOKEN" ]; then
  echo "Missing required GITHUB_ACCESS_TOKEN"
  exit 1
fi

function plugin_read_list() {
  prefix_read_list "BUILDKITE_PLUGIN_GITHUB_PIPELINE_UPLOAD_$1"
}

function prefix_read_list() {
  local prefix="$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

function upload_file() {
  local file=$1

  echo "Retrieving https://api.github.com/repos/${REPO_SLUG}/contents/${file}?ref=${BUILDKITE_BRANCH}"

  PIPELINE_CONTENTS=$(curl --silent --fail -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" -H "Accept: application/vnd.github.v3.raw" -L "https://api.github.com/repos/${REPO_SLUG}/contents/${file}?ref=${BUILDKITE_BRANCH}")

  if [ -z "$PIPELINE_CONTENTS" ]; then
    echo "Github API Error"
    exit 1
  fi

  echo "$PIPELINE_CONTENTS" | buildkite-agent pipeline upload
}

echo "~~~ :pipeline: Uploading $PIPELINE_FILE"

files=$(plugin_read_list FILE)

if [ -n "$files" ]; then
  for file in $(plugin_read_list FILE); do
    upload_file "$file"
  done
else
  upload_file .buildkite/pipeline.yml
fi

